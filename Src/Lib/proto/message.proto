syntax = "proto3";

package SkillBridge.Message;

option csharp_namespace = "SkillBridge.Message";
option cc_enable_arenas = true;

////////////////////////////////////////////////////////////////
//
//  Basic Defines
//
////////////////////////////////////////////////////////////////
enum RESULT
{
	SUCCESS = 0;
	FAILED = 1;
}

enum CHARACTER_TYPE
{
	Player = 0;
	NPC = 1;
	Monster = 2;
}

enum CHARACTER_CLASS
{
	NONE = 0;
	WARRIOR = 1;
	WIZARD = 2;
	ARCHER = 3;
}

enum CHARACTER_STATE
{
	IDLE = 0;
	MOVE = 1;
}

enum ENTITY_EVENT
{
	NONE = 0;
	IDLE = 1;
	MOVE_FWD = 2;
	MOVE_BACK = 3;
	JUMP = 4;
	RIDE = 5;
}

enum ITEM_TYPE
{
	NORMAL = 0;
	MATERIAL = 1;
	TSAK = 2;//任务道具
	EQUIP = 3;//装备
	RIDE = 4;//坐骑
}

enum EQUIP_SLOT
{
	WEAPON = 0;
	ACCESSORY = 1; 
	HELMET = 2; //头
	CHEST = 3; //胸
	SHOULDER = 4; //肩
	PANTS = 5; //腿
	BOOTS = 6; //脚
	SLOT_MAX = 7;
}

message NUserInfo {
	int32 id = 1;
	NPlayerInfo player = 2;
}

message NPlayerInfo {
	int32 id = 1;
	repeated NCharacterInfo characters = 2;
}

message NCharacterInfo {
	int32 id = 1;// db id 数据库中的唯一ID
	int32 config_id = 2;//config id 配置表中的ID
	int32 entity_id  =3;//entity id
	string name = 4;
	CHARACTER_TYPE type = 5;
	CHARACTER_CLASS class = 6;
	int32 level = 7;
	int64 exp = 8;
	NAttributeDynamic attDynamic = 9;
	int32 mapId = 10;
	NEntity entity = 11;
	int64 gold = 12;//金钱

	repeated NItemInfo Items = 13;//repeated 相当于定义了一个数组
	NBagInfo Bag = 14;
	bytes Equips = 15;//装备
	repeated NQuestInfo quests = 16;//任务
	repeated NFriendInfo friends = 17;//好友
	NGuildInfo guild = 18;
	int32 ride = 19;//坐骑id

	repeated NSkillInfo skills = 20;
}

message NAttributeDynamic
{
	int32 HP  = 1;
	int32 MP  = 2;
}

message NItemInfo
{
	int32 id = 1;
	int32 count = 2;
}

message NSkillInfo
{
	int32 id = 1;
	int32 level = 2;
}

message NVector3
{
	int32 x = 1;
	int32 y = 2;
	int32 z = 3;
}

message NBagInfo
{
	int32 Unlocked = 1;
	bytes Items = 2;
}

//状态同步
enum STATUS_ACTION
{
	UPDATA = 0;
	ADD = 1;
	DELETE = 2;
}

enum STATUS_TYPE
{
	MONEY = 0;
	EXP = 1;
	LEVEL = 2;
	SKILL_POINT = 3;
	ITEM = 4;
}

enum STATUE_SOURCE
{
	UPDATA = 0;
	ADD = 1;
	DELETE = 3;
}

message NStatus
{
	STATUS_TYPE type = 1;
	STATUS_ACTION action = 2;
	int32 id = 3;
	int32 value = 4;
}

message StatusNotify
{
	repeated NStatus status = 1;
}

////////////////////////////////////////////////////////////////
//
//  Entities
//
////////////////////////////////////////////////////////////////


message NEntity {
	int32 id = 1;
	NVector3 position = 2;
	NVector3 direction = 3;
	int32 speed = 4;
}

message NEntitySync {
	int32 id = 1;
	ENTITY_EVENT event = 2;
	NEntity entity = 3;
	int32 param = 4;//坐骑的ID
}



////////////////////////////////////////////////////////////////
//
//  Messages
//
////////////////////////////////////////////////////////////////

message NetMessage{
	NetMessageRequest Request = 1;
	NetMessageResponse Response = 2;
}

message NetMessageRequest{
	UserRegisterRequest userRegister = 1;
	UserLoginRequest userLogin = 2;
	UserCreateCharacterRequest createChar = 3;
	UserGameEnterRequest gameEnter = 4;
	UserGameLeaveRequest gameLeave = 5;
	
	MapCharacterEnterRequest mapCharacterEnter = 6;

	MapEntitySyncRequest mapEntitySync = 8;
	MapTeleportRequest mapTeleport = 9;

	ItemBuyRequest itemBuy = 10;
	ItemEquipRequest itemEquip = 11;

	QuestListRequest questList = 12;
	QuestAcceptRequest questAccept = 13;
	QuestSubmitRequest questSubmit = 14;

	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListRequest friendList = 17;
	FriendRemoveRequest friendRemove = 18;

	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoRequest teamInfo = 21;
	TeamLeaveRequest teamLeave = 22;
	TeamSetLeaderRequest teamSetLeader = 23;

	GuildCreateRequest guildCreate = 24;
	GuildJoinRequest guildJoinReq = 25;
	GuildJoinResponse guildJoinRes = 26;
	GuildRequest guild = 27;
	GuildLeaveRequest guildLeave = 28;
	GuildListRequset guildList = 29;
	GuildAdminRequest guildAdmin = 30;
	GuildSetNoticeRequest guildSetNotice = 31;

	ChatRequest chat = 32;

	SkillCastRequest skillCast = 50;
}

message NetMessageResponse{
	UserRegisterResponse userRegister = 1;
	UserLoginResponse userLogin = 2;
	UserCreateCharacterResponse createChar = 3;
	UserGameEnterResponse gameEnter = 4;
	UserGameLeaveResponse gameLeave = 5;

	MapCharacterEnterResponse mapCharacterEnter = 6;
	MapCharacterLeaveResponse mapCharacterLeave = 7;

	MapEntitySyncResponse mapEntitySync = 8;

	ItemBuyResponse itemBuy = 10;
	ItemEquipResponse itemEquip = 11;

	QuestListResponse questList = 12;
	QuestAcceptResponse questAccept = 13;
	QuestSubmitResponse questSubmit = 14;

	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListResponse friendList = 17;
	FriendRemoveResponse friendRemove = 18;

	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoResponse teamInfo = 21;
	TeamLeaveResponse teamLeave = 22;
	TeamSetLeaderResponse teamSetLeader = 23;

	GuildCreateResponse guildCreate = 24;
	GuildJoinRequest guildJoinReq = 25;
	GuildJoinResponse guildJoinRes = 26;
	GuildResponse guild = 27;
	GuildLeaveResponse guildLeave = 28;
	GuildListResponse guildList = 29;
	GuildAdminResponse guildAdmin = 30;
	GuildSetNoticeResponse guildSetNotice = 31;

	ChatResponse chat = 32;

	SkillCastResponse skillCast = 50;
	SkillHitResponse skillHits = 51;

	StatusNotify statusNotify = 100;
}


// User Protocol
message FirstTestRequest { // 测试对应课程4.1
	string helloworld = 1;
}


message UserLoginRequest {
	string user = 1;
	string passward = 2;
}

message UserLoginResponse {
	RESULT result = 1;
	string errormsg = 2;
	NUserInfo userinfo = 3;
}


message UserRegisterRequest
{
	string user = 1;
	string passward = 2;
}

message UserRegisterResponse {
	RESULT result = 1;
	string errormsg = 2;
}

message UserCreateCharacterRequest
{
	string name = 1;
	CHARACTER_CLASS class = 2;
}

message UserCreateCharacterResponse {
	RESULT result = 1;
	string errormsg = 2;
	repeated NCharacterInfo characters = 3;
}

message UserGameEnterRequest
{
	int32 characterIdx = 1;
}

message UserGameEnterResponse {
	RESULT result = 1;
	string errormsg = 2;
	NCharacterInfo character = 3;
}

message UserGameLeaveRequest
{
}

message UserGameLeaveResponse {
	RESULT result = 1;
	string errormsg = 2;
}

// Map Protocol
message MapCharacterEnterRequest
{
	int32 mapId = 1;
}

message MapCharacterEnterResponse
{
	int32 mapId = 1;
	repeated NCharacterInfo characters = 2;
}

message MapCharacterLeaveResponse
{
	int32 entityId = 1;
}


message MapEntitySyncRequest
{
    NEntitySync entitySync = 1;
}


message MapEntitySyncResponse
{
    repeated NEntitySync entitySyncs = 2;
}

message MapTeleportRequest
{
	int32 teleporterId = 1;
}

message ItemBuyRequest
{
	int32 shopId = 1;
	int32 shopItemId = 2;
}

message ItemBuyResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

//背包保存
message BagSaveRequest
{
	NBagInfo BagInfo = 1;
}

message BagSaveResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

message ItemEquipRequest
{
	int32 slot = 1;
	int32 itemId = 2;
	bool isEquip = 3; //0穿1脱
}

message ItemEquipResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

// 任务系统

enum QUEST_STATUS
{
	IN_PROGRESS = 0;//已接受 未完成
	COMPLETED = 1;//已完成 未提交
	FINISHED = 2;//已完成 已提交
	FAILED = 3;//失败
}

enum QUEST_LIST_TYPE//任务列表类型
{
	ALL = 0;
	IN_PROGRESS = 1;
	FINISHED = 2;
}

message NQuestInfo
{
	int32 quest_id = 1;
	int32 quest_guid = 2;
	QUEST_STATUS status = 3;
	repeated int32 targets = 4;
}

message QuestListRequest
{
	QUEST_LIST_TYPE listtype = 1;
}

message QuestListResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NQuestInfo quests = 3;
}

message QuestAcceptRequest
{
	int32 quest_id = 1;
}

message QuestAcceptResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NQuestInfo quest = 3;
}

message QuestSubmitRequest
{
	int32 quest_id = 1;
}

message QuestSubmitResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NQuestInfo quest = 3;
}

message QuestAbandonRequest
{
	int32 quest_id = 1;
}

message QuestAbandonResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

// 好友系统
message NFriendInfo
{
	int32 id = 1;
	NCharacterInfo friendInfo = 2;
	int32 status = 3; //1:在线 other:离线
}

message FriendAddRequest
{
	int32 from_id = 1;
	string from_name = 2;
	int32 to_id = 3;
	string to_name = 4;
}

message FriendAddResponse
{
	RESULT result = 1;
	string errormsg = 2;
	FriendAddRequest request = 3;
}

message FriendListRequest
{
}

message FriendListResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NFriendInfo friends = 3;
}

message FriendRemoveRequest
{
	int32 id = 1;
	int32 friendId = 2;
}

message FriendRemoveResponse
{
	RESULT result = 1;
	string errormsg = 2;
	int32 id = 3;
}

// 组队系统
message NTeamInfo
{
	int32 id = 1;
	int32 leader = 2;
	repeated NCharacterInfo members = 3;
}

message TeamInviteRequest
{
	int32 team_id = 1;
	int32 from_id = 2;
	string from_name = 3;
	int32 to_id = 4;
	string to_name = 5;
}

message TeamInviteResponse
{
	RESULT result = 1;
	string errormsg = 2;
	TeamInviteRequest request = 3;
}

message TeamInfoRequest
{

}

message TeamInfoResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NTeamInfo team = 3;
}

message TeamLeaveRequest
{
	int32 team_id = 1;
	int32 memberId = 2;
}

message TeamLeaveResponse
{
	RESULT result = 1;
	string errormsg = 2;
	int32 characterId = 3;
}

message TeamSetLeaderRequest
{
	int32 team_id = 1;
	int32 leader_id = 2;
}

message TeamSetLeaderResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

//Guild System
enum GUILD_TITLE
{
	NONE = 0;
	PRESIDENT = 1;
	VICE_PRESIDENT = 2;
}

enum APPLY_RESULT
{
	NONE = 0;
	ACCEPT = 1;
	REJECT = 2;
}

message NGuildInfo
{
	int32 id = 1;
	string guild_name = 2;
	int32 leaderId = 3;
	string leaderName = 4;
	string notice = 5;
	int32 memberCount = 6;
	repeated NGuildMemberInfo members = 7;
	repeated NGuildApplyInfo applies = 8;
	int64 createTime = 9;
}

message NGuildMemberInfo
{
	int32 id = 1;
	int32 characterId = 2;
	GUILD_TITLE title = 3;//职位
	NCharacterInfo info = 4;
	int64 joinTime = 5;
	int64 lastTime = 6;
	int32 status = 7;
}
//工会加入申请信息
message NGuildApplyInfo
{
	int32 guild_id = 1;
	int32 characterId = 2;
	string name = 3;
	int32 class = 4;
	int32 level = 5;
	APPLY_RESULT result = 6;
}

message GuildCreateRequest
{
	string guild_name = 1;
	string guild_notice = 2;
}

message GuildCreateResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NGuildInfo guildInfo = 3;
}
//加入公会申请
message GuildJoinRequest
{
	NGuildApplyInfo apply = 1;
}

message GuildJoinResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NGuildApplyInfo apply = 3;
}

message GuildListRequset
{
	
}

message GuildListResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NGuildInfo guilds = 3;
}
//工会信息
message GuildRequest
{

}

message GuildResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NGuildInfo guildInfo = 3;
}

message GuildLeaveRequest
{

}

message GuildLeaveResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

enum GUILD_ADMIN_COMMAND
{
	KICKOUT =  1;	//踢出
	PROMOTE = 2;	//提升职位
	DEPOSE = 3;		//罢免
	TRANSFER = 4;	//转让会长
}

message GuildAdminRequest
{
	GUILD_ADMIN_COMMAND command = 1;
	int32 target = 2;
}

message GuildAdminResponse
{
	RESULT result = 1;
	string errormsg = 2;
	GuildAdminRequest command = 3;
}

message GuildSetNoticeRequest
{
	string notice = 1;
}

message GuildSetNoticeResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

enum CHAT_CHANNEL
{
	ALL = -1;	//全部
	LOCAL = 1;	//本地
	WORLD = 2;	//世界
	SYSTEM = 4;	//系统
	PRIVATE = 8;//私聊
	TEAM = 16;	//队伍
	GUILD = 32;	//公会
}

message ChatMessage
{
	CHAT_CHANNEL channel = 1;
	int32 id = 2;
	int32 from_id = 3;
	string from_name = 4;
	int32 to_id = 5;
	string to_name = 6;
	string message = 7;
	double time = 8;
}

message ChatRequest
{
	ChatMessage message = 1;
}

message ChatResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated ChatMessage localMessage = 3;
	repeated ChatMessage worldMessage = 4;
	repeated ChatMessage teamMessage = 5;
	repeated ChatMessage guildMessage = 6;
	repeated ChatMessage privateMessage = 7;
	repeated ChatMessage systemMessage = 8;
}

////////////////////////////////////////////////////////////////
//
//  Battle
//
////////////////////////////////////////////////////////////////

enum SKILL_RESULT
{
    OK = 0;					//正常
    OUT_OF_MP = 1;			//MP不足
    COOL_DOWN  = 2;			//技能冷却中
    INVALID_TARGET = 3;		//无效目标
	OUT_OF_RANGE = 4;		//超出施法距离
	CASTING = 5;			//技能正在施法
}

enum SKILL_STATUS
{
	NONE = 0;
	CASTING = 1;  		//施法中
	RUNNING = 2; 		//技能运行中
}

message NSkillCastInfo
{
	int32 skillId = 1;
	int32 casterId = 2;
	int32 targetId = 3;
	NVector3 position = 4;
}

message NDamageInfo
{
	int32 entityId = 1;		//技能目标
	int32 damage = 2;		//伤害
	bool crit = 3;			//是否暴击
	bool will_dead = 4;		//此伤害后死亡
}

message NSkillHitInfo
{
	int32 skillId = 1;		//技能ID
	int32 casterId = 2;		//技能发起者
	int32 hitId = 3;		//技能的第x击
	repeated NDamageInfo damages  = 4;
}

message SkillCastRequest
{
	NSkillCastInfo castInfo = 1;
}

message SkillCastResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NSkillCastInfo castInfo = 3;
	NDamageInfo damage = 4;
}

message SkillHitResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NSkillHitInfo hits = 3;
}
